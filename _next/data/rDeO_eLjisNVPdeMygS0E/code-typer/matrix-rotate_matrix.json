{"pageProps":{"codeSnippet":"\"\"\"\nIn this problem, we want to rotate the matrix elements by 90, 180, 270\n(counterclockwise)\nDiscussion in stackoverflow:\nhttps://stackoverflow.com/questions/42519/how-do-you-rotate-a-two-dimensional-array\n\"\"\"\n\nfrom __future__ import annotations\n\n\ndef make_matrix(row_size: int = 4) -> list[list[int]]:\n    \"\"\"\n    >>> make_matrix()\n    [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]\n    >>> make_matrix(1)\n    [[1]]\n    >>> make_matrix(-2)\n    [[1, 2], [3, 4]]\n    >>> make_matrix(3)\n    [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n    >>> make_matrix() == make_matrix(4)\n    True\n    \"\"\"\n    row_size = abs(row_size) or 4\n    return [[1 + x + y * row_size for x in range(row_size)] for y in range(row_size)]\n\n\ndef rotate_90(matrix: list[list[int]]) -> list[list[int]]:\n    \"\"\"\n    >>> rotate_90(make_matrix())\n    [[4, 8, 12, 16], [3, 7, 11, 15], [2, 6, 10, 14], [1, 5, 9, 13]]\n    >>> rotate_90(make_matrix()) == transpose(reverse_column(make_matrix()))\n    True\n    \"\"\"\n\n    return reverse_row(transpose(matrix))\n    # OR.. transpose(reverse_column(matrix))\n\n\ndef rotate_180(matrix: list[list[int]]) -> list[list[int]]:\n    \"\"\"\n    >>> rotate_180(make_matrix())\n    [[16, 15, 14, 13], [12, 11, 10, 9], [8, 7, 6, 5], [4, 3, 2, 1]]\n    >>> rotate_180(make_matrix()) == reverse_column(reverse_row(make_matrix()))\n    True\n    \"\"\"\n\n    return reverse_row(reverse_column(matrix))\n    # OR.. reverse_column(reverse_row(matrix))\n\n\ndef rotate_270(matrix: list[list[int]]) -> list[list[int]]:\n    \"\"\"\n    >>> rotate_270(make_matrix())\n    [[13, 9, 5, 1], [14, 10, 6, 2], [15, 11, 7, 3], [16, 12, 8, 4]]\n    >>> rotate_270(make_matrix()) == transpose(reverse_row(make_matrix()))\n    True\n    \"\"\"\n\n    return reverse_column(transpose(matrix))\n    # OR.. transpose(reverse_row(matrix))\n\n\ndef transpose(matrix: list[list[int]]) -> list[list[int]]:\n    matrix[:] = [list(x) for x in zip(*matrix)]\n    return matrix\n\n\ndef reverse_row(matrix: list[list[int]]) -> list[list[int]]:\n    matrix[:] = matrix[::-1]\n    return matrix\n\n\ndef reverse_column(matrix: list[list[int]]) -> list[list[int]]:\n    matrix[:] = [x[::-1] for x in matrix]\n    return matrix\n\n\ndef print_matrix(matrix: list[list[int]]) -> None:\n    for i in matrix:\n        print(*i)\n\n\nif __name__ == \"__main__\":\n    matrix = make_matrix()\n    print(\"\\norigin:\\n\")\n    print_matrix(matrix)\n    print(\"\\nrotate 90 counterclockwise:\\n\")\n    print_matrix(rotate_90(matrix))\n\n    matrix = make_matrix()\n    print(\"\\norigin:\\n\")\n    print_matrix(matrix)\n    print(\"\\nrotate 180:\\n\")\n    print_matrix(rotate_180(matrix))\n\n    matrix = make_matrix()\n    print(\"\\norigin:\\n\")\n    print_matrix(matrix)\n    print(\"\\nrotate 270 counterclockwise:\\n\")\n    print_matrix(rotate_270(matrix))\n"},"__N_SSG":true}